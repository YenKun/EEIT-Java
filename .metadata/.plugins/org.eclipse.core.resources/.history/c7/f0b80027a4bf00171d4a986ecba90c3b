package oop.io;

class maze {
	private int x = 0;
	private int y = 0;

	public void move(int x, int y) {
		synchronized (this) {
			this.x = x;
			this.y = y;
			System.out.println("x:" + x + "y:" + y);
			this.notify();
		}
	}

	public void check() {
		synchronized (this) {
			try {
				this.wait();

				if (x == 0 && y == 0) {
					System.exit(-1);
				}
			} catch (InterruptedException e) {
				e.printStackTrace();
			}

		}
	}
}

class Hero implements Runnable {

	private maze core;
	public Hero(maze core) {
		this.core = core;
	}
	@Override
	public void run() {

		while (true) {

			int x = (int) (Math.random() * 5);
			int y = (int) (Math.random() * 5);
			try {
				Thread.sleep((long)Math.random()*800+500);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			core.move(x,y);
		}
		
		
	}

}

public class testSyncronizedEx1 {

	public static void main(String[] args) {
		
		

	}

}
